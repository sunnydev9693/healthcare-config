spring.datasource.url=jdbc:postgresql://postgres:5432/healthcare
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#kafka configuration
spring.kafka.consumer.group-id=appointment-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

resilience4j.circuitbreaker.instances.doctorPatientService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.doctorPatientService.slidingWindowSize=5
resilience4j.circuitbreaker.instances.doctorPatientService.minimumNumberOfCalls=3
resilience4j.circuitbreaker.instances.doctorPatientService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.doctorPatientService.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.doctorPatientService.permittedNumberOfCallsInHalfOpenState=2
resilience4j.circuitbreaker.instances.doctorPatientService.automaticTransitionFromOpenToHalfOpenEnabled=true

# --- Actuator settings ---
management.endpoints.web.exposure.include=*
management.info.env.enabled=true
management.endpoint.health.show-details=always
# --- Service Info ---
info.app.name=${spring.application.name}
info.app.description=Microservice for ${spring.application.name}
info.app.version=1.0.0


